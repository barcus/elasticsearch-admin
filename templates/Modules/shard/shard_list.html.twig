{% embed 'Embed/table_embed.html.twig' %}
    {% import 'Import/app_import.html.twig' as appImport %}

    {% set columns = {'index': true, 'shard': true, 'primary': true, 'state': true, 'unassigned_reason': true, 'documents': true, 'size': true, 'node': true} %}

    {% block thead %}
        <tr>
            {% for column, display in columns %}
                {% if true == display %}
                    {% if 'index' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'index', 'title': 'index'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'shard' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'shard', 'title': 'shard'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'primary' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'prirep', 'title': 'primary'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'state' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'state', 'title': 'state'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'unassigned_reason' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'unassigned.reason', 'title': 'unassigned_reason'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'documents' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'docs', 'title': 'documents'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'size' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'store', 'title': 'size'|trans})}}
                        </th>
                    {% endif %}

                    {% if 'node' == column %}
                        <th>
                            {{ appImport.sort({'cat_sort': cat_sort, 'url': path('shards'), 's': 'node', 'title': 'node'|trans})}}
                        </th>
                    {% endif %}
                {% endif %}
            {% endfor %}
        </tr>
    {% endblock %}

    {% block tbody %}
        {% for row in shards.rows %}
            <tr class="index_system-{% if '.' == row.index|slice(0, 1) %}true{% else %}false{% endif %} state-{{ row.state }} primary-{% if row.isPrimary %}true{% else %}false{% endif %}" data-search="{{ row.index }}">
                {% for column, display in columns %}
                    {% if true == display %}
                        {% if 'index' == column %}
                            <td>
                                {% if is_granted('INDICES', 'global') %}
                                    <a class="text-secondary" href="{{ path('indices_read', {'index': row.index}) }}">{{ row.index }}</a>
                                {% else %}
                                    {{ row.index }}
                                {% endif %}
                            </td>
                        {% endif %}

                        {% if 'shard' == column %}
                            <td>
                                {{ row.number }}
                            </td>
                        {% endif %}

                        {% if 'primary' == column %}
                            <td>
                                {% if row.isPrimary %}
                                    {{ appImport.badge({'title': 'boolean.true'|trans, 'context': 'true'}) }}
                                {% else %}
                                    {{ appImport.badge({'title': 'boolean.false'|trans, 'context': 'false'}) }}
                                {% endif %}
                            </td>
                        {% endif %}

                        {% if 'state' == column %}
                            <td>
                                {% if 'UNASSIGNED' == row.state and is_granted('CLUSTER_ALLOCATION_EXPLAIN', 'global') %}
                                    <a href="{{ path('cluster_allocation_explain') }}">{{ appImport.badge({'title': row.state|trans, 'context': row.state}) }}</a>
                                {% else %}
                                    {{ appImport.badge({'title': row.state|trans, 'context': row.state}) }}
                                {% endif %}
                            </td>
                        {% endif %}

                        {% if 'unassigned_reason' == column %}
                            <td>
                                {% if row.unassignedReason %}
                                    {{ appImport.badge({'title': row.unassignedReason|trans, 'context': 'danger'}) }}
                                {% endif %}
                            </td>
                        {% endif %}

                        {% if 'documents' == column %}
                            <td>
                                {{ row.documents }}
                            </td>
                        {% endif %}

                        {% if 'size' == column %}
                            <td>
                                {{ row.size|human_filesize }}
                            </td>
                        {% endif %}

                        {% if 'node' == column %}
                            <td>
                                {% if row.node %}
                                    {% if is_granted('NODES', 'global') and 'RELOCATING' != row.state %}
                                        <a class="text-secondary" href="{{ path('nodes_read', {'node': row.node}) }}">{{ row.node }}</a>
                                    {% else %}
                                        {{ row.node }}
                                    {% endif %}
                                    {% if master_node == row.node %}{{ appImport.badge({'title': 'master'|trans, 'context': 'master_node'}) }}{% endif %}
                                {% endif %}
                            </td>
                        {% endif %}
                    {% endif %}
                {% endfor %}
            </tr>
        {% endfor %}
    {% endblock %}
{% endembed %}
